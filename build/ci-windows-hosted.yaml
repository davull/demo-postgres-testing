# https://learn.microsoft.com/en-us/azure/devops/pipelines/repos/azure-repos-git
trigger:
  branches:
    include:
      - main

# https://learn.microsoft.com/en-us/azure/devops/pipelines/build/variables
variables:
  - name: Projects
    value: "src/*/*.csproj"
  - name: TestProjects
    value: ./src/Demo.Lib.Tests/Demo.Lib.Tests.csproj

# https://learn.microsoft.com/en-us/azure/devops/pipelines/agents/hosted
# https://github.com/actions/runner-images/blob/main/images/windows/Windows2022-Readme.md
pool:
  vmImage: "windows-latest"

steps:
  - checkout: self
    displayName: "Checkout repository"

  # Install TimescaleDB
  - task: PowerShell@2
    displayName: "Install TimescaleDB"
    inputs:
      targetType: "inline"
      script: |

        echo "Download TimescaleDB"

        Invoke-WebRequest `
          -Uri https://github.com/timescale/timescaledb/releases/download/2.17.1/timescaledb-postgresql-14-windows-amd64.zip `
          -OutFile timescaledb.zip
        Expand-Archive timescaledb.zip -DestinationPath $(Build.ArtifactStagingDirectory)

        echo "Copy TimescaleDB files"

        $pgDir = "C:\Program Files\PostgreSQL\14"
        Copy-Item "$(Build.ArtifactStagingDirectory)\timescaledb\timescaledb.control" "$pgDir\share\extension\"
        Copy-Item "$(Build.ArtifactStagingDirectory)\timescaledb\*.dll" "$pgDir\lib\"
        Copy-Item "$(Build.ArtifactStagingDirectory)\timescaledb\timescaledb--*.sql" "$pgDir\share\extension\"

        echo "Configure PostgreSQL"

        $configFile = "$pgDir\data\postgresql.conf"
        (Get-Content $configFile) -replace "#shared_preload_libraries = ''", "shared_preload_libraries = 'timescaledb'" | Set-Content $configFile

  # Start PostgreSQL
  - task: CmdLine@2
    displayName: "Start PostgreSQL"
    inputs:
      script: |
        "C:\Program Files\PostgreSQL\14\bin\pg_ctl.exe" start -D "C:\Program Files\PostgreSQL\14\data" -w

  # Enable TimescaleDB Extension
  - task: CmdLine@2
    displayName: "Enable TimescaleDB Extension"
    inputs:
      script: |
        "C:\Program Files\PostgreSQL\14\bin\psql.exe" -U postgres -c "CREATE EXTENSION IF NOT EXISTS timescaledb;" -d postgres

  # Use .NET 8.x
  - task: UseDotNet@2
    displayName: "Use .NET 8.x"
    inputs:
      packageType: sdk
      version: 8.x

  # Install docker cli
  # https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/docker-installer-v0
  # https://github.com/docker/cli/tags
  - task: DockerInstaller@0
    displayName: "Install docker cli"
    inputs:
      dockerVersion: 26.1.0

  # Dotnet restore
  # https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/dotnet-core-cli-v2
  - task: DotNetCoreCLI@2
    displayName: "Dotnet restore"
    inputs:
      command: restore
      feedsToUse: select
      includeNuGetOrg: true
      projects: $(Projects)
      arguments: "--locked-mode"

  # Dotnet build
  - task: DotNetCoreCLI@2
    displayName: "Dotnet build"
    inputs:
      command: build
      projects: $(Projects)
      arguments: "--configuration Release"

  # Dotnet test
  - task: DotNetCoreCLI@2
    displayName: "Dotnet test"
    inputs:
      command: test
      projects: $(TestProjects)
